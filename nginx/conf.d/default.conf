server {
    listen 80;
    listen [::]:80;
    server_name localhost;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    listen 443 quic reuseport;
    listen [::]:443 quic reuseport;
    http2 on;
    server_name localhost;

    # SSL certificates (self-signed for local development)
    ssl_certificate /etc/nginx/certs/localhost.crt;
    ssl_certificate_key /etc/nginx/certs/localhost.key;

    # SSL configuration for security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # HTTP/3 specific headers
    add_header Alt-Svc 'h3=":443"; ma=86400' always;
    add_header X-Protocol $server_protocol always;

    # Document root
    root /var/www/html;
    index index.php index.html index.htm;

    # Maximum file upload size
    client_max_body_size 64M;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Permissions-Policy "interest-cohort=()" always;
    add_header X-Achievement "https://alexandria.dk/myhistory?achievement=createaguiinterfaceusingvisualbasic" always;
    add_header X-Clacks-Overhead "GNU Torben Ussing, GNU Alex Uth, GNU Michael Erik NÃ¦sby" always;

    # Handle language-based URLs (equivalent to .htaccess rules)
    location ~ ^/(da|en|sv|nb|de|fi|fr|es|ru|be|pl|it|ar|zh|ja|he|fo|kl|hi|tl|sa|ta|bn|nv|cr|oj|xx)/(.*)$ {
        try_files /$2 /$2/ @php;
    }

    # Main location block
    location / {
        try_files $uri $uri/ @php;
    }

    # Handle .php files - send to PHP-FPM
    location ~ \.php$ {
        try_files $uri =404;
        include fastcgi_params;
        fastcgi_intercept_errors on;
        # Use PHP-FPM container when available, otherwise return 503
        fastcgi_pass php:9000;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $document_root;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        
        # Fallback error handling
        error_page 502 503 504 /50x.html;
    }

    # Named location for PHP processing
    location @php {
        rewrite ^/(.*)$ /$1.php last;
    }

    # Handle download URLs (equivalent to .htaccess rules)
    location ~ ^/download/(.*)$ {
        rewrite ^/download/(.*)$ /download.php/$1 last;
    }

    # Static files - serve directly
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Deny access to sensitive files
    location ~ /\. {
        deny all;
    }

    location ~ /composer\.(json|lock)$ {
        deny all;
    }

    location ~ /vendor/ {
        deny all;
    }

    # Block access to specific files mentioned in .htaccess
    location ~ ^/apple-touch-icon {
        deny all;
    }

    location = /wp-login.php {
        deny all;
    }

    # Custom error page for 404
    error_page 404 /error/404magic.php;
    
    # Error page for when PHP-FPM is not available
    location = /50x.html {
        root /var/www/html;
        return 503 "PHP-FPM service is not available. Please ensure the PHP container is running.";
    }
    
    # Handle specific redirects from .htaccess
    location = /gfx/english {
        return 301 /gfx/scenarie/english;
    }
    
    location = /otto {
        return 301 /awards?cid=1;
    }
    
    location = /oss.php {
        return 301 /about.php;
    }
    
    # Country code redirects
    location = /dk { return 301 /da; }
    location = /se { return 301 /sv; }
    location = /us { return 301 /en; }
    location = /uk { return 301 /en; }
    location = /gb { return 301 /en; }
    location = /no { return 301 /nb; }
}
