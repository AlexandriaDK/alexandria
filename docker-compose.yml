services:
  db:
    image: mariadb:11.8
    restart: unless-stopped
    environment:
      MARIADB_ROOT_PASSWORD: secret
      MARIADB_DATABASE: alexandria
      MARIADB_USER: alexuser
      MARIADB_PASSWORD: alexpass
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./alexandria_tables.sql:/docker-entrypoint-initdb.d/1-structure.sql:ro
    networks:
      - alexandria_network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  php:
    build: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_USER: alexuser
      DB_PASS: alexpass
    restart: unless-stopped
    volumes:
      # Mount the www directory for live development
      - ./www:/var/www/html
      # Mount only the Smarty templates for live template development
      - ./smarty/templates:/var/www/smarty/templates
      # Mount includes so social/login configs are available during development
      - ./includes:/var/www/includes:ro
    networks:
      - alexandria_network

  nginx:
    image: nginx:alpine
    depends_on:
      - php
    ports:
      - "8080:80"
      - "8443:443"
      - "8443:443/udp" # HTTP/3 (QUIC) support
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/certs:/etc/nginx/certs
      - ./www:/var/www:ro
    networks:
      - alexandria_network
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    command: >
      sh -c "
        mkdir -p /etc/nginx/certs &&
        if [ ! -f /etc/nginx/certs/localhost.crt ]; then
          echo 'Generating SSL certificate...' &&
          apk add --no-cache openssl &&
          openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/certs/localhost.key -out /etc/nginx/certs/localhost.crt -subj '/C=DK/ST=Copenhagen/L=Copenhagen/O=Alexandria Local Dev/CN=localhost' -addext 'subjectAltName=DNS:localhost,DNS:*.localhost,IP:127.0.0.1' &&
          echo 'SSL certificate generated successfully!'
        else
          echo 'SSL certificate already exists.'
        fi &&
        echo 'Starting Nginx with HTTP/3 support...' &&
        nginx -g 'daemon off;'
      "

networks:
  alexandria_network:
    driver: bridge

volumes:
  db_data:
